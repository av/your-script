VAR var
LET let
CONST const
FOR for
IF if
ELSE else
SWITCH switch
CASE case
BREAK break
DEFAULT default
TRY try
CATCH catch
FINALLY finally
WHILE while
DO do
FUNCTION function
THIS this
RETURN return
CONTINUE continue
DELETE delete
WITH with
IN in
OF of
AS as
NEW new
THROW throw
ENUM enum
EXPORT export
IMPORT import
SUPER super
IMPLEMENTS implements
INTERFACE interface
PACKAGE package
VOID void
CLASS class
EXTENDS extends
PRIVATE private
PROTECTED protected
PUBLIC public
STATIC static
YIELD yield
EVAL eval
ARGUMENTS arguments
TRUE true
FALSE false
NULL null
TYPEOF typeof
INSTANCEOF instanceof
DEBUGGER debugger
FROM from